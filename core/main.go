package main

import (
	"fmt"
	"time"

	"github.com/Dabokin/ShadowFind/core/scanner"
)

func main() {
	host := "example.com"
	ports := []int{22, 80, 443, 8080, 5432}

	// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
	fmt.Println("üîç –ë—ã—Å—Ç—Ä–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ (—Ç–∞–π–º–∞—É—Ç 2s):")
	openPorts := scanner.ScanPorts(host, ports)
	printResults(openPorts)

	// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å –∫–∞—Å—Ç–æ–º–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π
	fmt.Println("\nüîç –¢—â–∞—Ç–µ–ª—å–Ω–æ–µ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ (—Ç–∞–π–º–∞—É—Ç 5s, 10 workers):")
	cfg := scanner.Config{
		Timeout:    5 * time.Second,
		MaxWorkers: 10,
	}
	openPorts = scanner.ScanPortsWithConfig(host, ports, cfg)
	printResults(openPorts)
}

func printResults(ports []int) {
	if len(ports) == 0 {
		fmt.Println("‚ùå –û—Ç–∫—Ä—ã—Ç—ã—Ö –ø–æ—Ä—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
		return
	}

	fmt.Println("‚úÖ –û—Ç–∫—Ä—ã—Ç—ã–µ –ø–æ—Ä—Ç—ã:")
	for _, p := range ports {
		fmt.Printf("- %d\n", p)
	}
}
